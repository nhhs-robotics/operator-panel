# Write your code here :-)
## Waratah Info: https://github.com/microsoft/hidtools/wiki/Waratah-Sections
## Waratah input:
## gamepad4.wara


[[applicationCollection]]
usage = ['Generic Desktop', 'Joystick']

    [[applicationCollection.inputReport]]

        [[applicationCollection.inputReport.physicalCollection]]
        usage = ['Generic Desktop', 'Pointer']

            [[applicationCollection.inputReport.physicalCollection.variableItem]]
            usage = ['Generic Desktop', 'X']
            sizeInBits = 8

            [[applicationCollection.inputReport.physicalCollection.variableItem]]
            usage = ['Generic Desktop', 'Y']
            sizeInBits = 8

        [[applicationCollection.inputReport.variableItem]]
        usage = ['Generic Desktop', 'Hat Switch']
        logicalValueRange = [0, 3]
        physicalValueRange = [0, 270]
        unit = 'degrees'

        [[applicationCollection.inputReport.variableItem]]
        usageRange = ['Button', 'Button 1', 'Button 12']
        logicalValueRange = [0, 1]
### =======

// AUTO-GENERATED by WaratahCmd.exe

#include <memory>

// HID Usage Tables: 1.3.0
// Descriptor size: 69 (bytes)
// +----------+-------+------------------+
// | ReportId | Kind  | ReportSizeInBits |
// +----------+-------+------------------+
// |        1 | Input |               32 |
// +----------+-------+------------------+
static const uint8_t hidReportDescriptor [] =
{
    0x05, 0x01,          // UsagePage(Generic Desktop[1])
    0x09, 0x04,          // UsageId(Joystick[4])
    0xA1, 0x01,          // Collection(Application)
    0x85, 0x01,          //     ReportId(1)
    0x09, 0x01,          //     UsageId(Pointer[1])
    0xA1, 0x00,          //     Collection(Physical)
    0x09, 0x30,          //         UsageId(X[48])
    0x09, 0x31,          //         UsageId(Y[49])
    0x15, 0x80,          //         LogicalMinimum(-128)
    0x25, 0x7F,          //         LogicalMaximum(127)
    0x95, 0x02,          //         ReportCount(2)
    0x75, 0x08,          //         ReportSize(8)
    0x81, 0x02,          //         Input(Data, Variable, Absolute, NoWrap, Linear, PreferredState, NoNullPosition, BitField)
    0xC0,                //     EndCollection()
    0x09, 0x39,          //     UsageId(Hat Switch[57])
        0x46, 0x0E, 0x01,    //     PhysicalMaximum(270)
    0x65, 0x14,          //     Unit('degrees', EnglishRotation, Degrees:1)
    0x15, 0x00,          //     LogicalMinimum(0)
    0x25, 0x03,          //     LogicalMaximum(3)
    0x95, 0x01,          //     ReportCount(1)
    0x75, 0x02,          //     ReportSize(2)
    0x81, 0x02,          //     Input(Data, Variable, Absolute, NoWrap, Linear, PreferredState, NoNullPosition, BitField)
    0x05, 0x09,          //     UsagePage(Button[9])
    0x19, 0x01,          //     UsageIdMin(Button 1[1])
    0x29, 0x0C,          //     UsageIdMax(Button 12[12])
    0x45, 0x00,          //     PhysicalMaximum(0)
    0x65, 0x00,          //     Unit(None)
    0x25, 0x01,          //     LogicalMaximum(1)
    0x95, 0x0C,          //     ReportCount(12)
    0x75, 0x01,          //     ReportSize(1)
    0x81, 0x02,          //     Input(Data, Variable, Absolute, NoWrap, Linear, PreferredState, NoNullPosition, BitField)
    0x95, 0x01,          //     ReportCount(1)
    0x75, 0x02,          //     ReportSize(2)
    0x81, 0x03,          //     Input(Constant, Variable, Absolute, NoWrap, Linear, PreferredState, NoNullPosition, BitField)
    0xC0,                // EndCollection()
};


### ===========================

## Hat: 7 switches
## Input:
[[applicationCollection]]
usage = ['Generic Desktop', 'Joystick']

    [[applicationCollection.inputReport]]

        [[applicationCollection.inputReport.physicalCollection]]
        usage = ['Generic Desktop', 'Pointer']

            [[applicationCollection.inputReport.physicalCollection.variableItem]]
            usage = ['Generic Desktop', 'X']
            sizeInBits = 8

            [[applicationCollection.inputReport.physicalCollection.variableItem]]
            usage = ['Generic Desktop', 'Y']
            sizeInBits = 8

        [[applicationCollection.inputReport.variableItem]]
        usage = ['Generic Desktop', 'Hat Switch']
        logicalValueRange = [0, 7]
        physicalValueRange = [0, 270]
        unit = 'degrees'

        [[applicationCollection.inputReport.variableItem]]
        usageRange = ['Button', 'Button 1', 'Button 12']
        logicalValueRange = [0, 1]


### OUTPUT
// AUTO-GENERATED by WaratahCmd.exe

#include <memory>

// HID Usage Tables: 1.3.0
// Descriptor size: 67 (bytes)
// +----------+-------+------------------+
// | ReportId | Kind  | ReportSizeInBits |
// +----------+-------+------------------+
// |        1 | Input |               32 |
// +----------+-------+------------------+
static const uint8_t hidReportDescriptor [] =
{
    0x05, 0x01,          // UsagePage(Generic Desktop[1])
    0x09, 0x04,          // UsageId(Joystick[4])
    0xA1, 0x01,          // Collection(Application)
    0x85, 0x01,          //     ReportId(1)
    0x09, 0x01,          //     UsageId(Pointer[1])
    0xA1, 0x00,          //     Collection(Physical)
    0x09, 0x30,          //         UsageId(X[48])
    0x09, 0x31,          //         UsageId(Y[49])
    0x15, 0x80,          //         LogicalMinimum(-128)
    0x25, 0x7F,          //         LogicalMaximum(127)
    0x95, 0x02,          //         ReportCount(2)
    0x75, 0x08,          //         ReportSize(8)
    0x81, 0x02,          //         Input(Data, Variable, Absolute, NoWrap, Linear, PreferredState, NoNullPosition, BitField)
    0xC0,                //     EndCollection()
    0x09, 0x39,          //     UsageId(Hat Switch[57])
    0x46, 0x0E, 0x01,    //     PhysicalMaximum(270)
    0x65, 0x14,          //     Unit('degrees', EnglishRotation, Degrees:1)
    0x15, 0x00,          //     LogicalMinimum(0)
    0x25, 0x07,          //     LogicalMaximum(7)
    0x95, 0x01,          //     ReportCount(1)
    0x75, 0x03,          //     ReportSize(3)
    0x81, 0x02,          //     Input(Data, Variable, Absolute, NoWrap, Linear, PreferredState, NoNullPosition, BitField)
    0x05, 0x09,          //     UsagePage(Button[9])
    0x19, 0x01,          //     UsageIdMin(Button 1[1])
    0x29, 0x0C,          //     UsageIdMax(Button 12[12])
    0x45, 0x00,          //     PhysicalMaximum(0)
    0x65, 0x00,          //     Unit(None)
    0x25, 0x01,          //     LogicalMaximum(1)
    0x95, 0x0C,          //     ReportCount(12)
    0x75, 0x01,          //     ReportSize(1)
    0x81, 0x02,          //     Input(Data, Variable, Absolute, NoWrap, Linear, PreferredState, NoNullPosition, BitField)
    0x95, 0x01,          //     ReportCount(1)
    0x81, 0x03,          //     Input(Constant, Variable, Absolute, NoWrap, Linear, PreferredState, NoNullPosition, BitField)
    0xC0,                // EndCollection()
};

####=======
### Buttons first


[[applicationCollection]]
usage = ['Generic Desktop', 'Joystick']

    [[applicationCollection.inputReport]]


        [[applicationCollection.inputReport.variableItem]]
        usageRange = ['Button', 'Button 1', 'Button 12']
        logicalValueRange = [0, 1]

        [[applicationCollection.inputReport.physicalCollection]]
        usage = ['Generic Desktop', 'Pointer']

            [[applicationCollection.inputReport.physicalCollection.variableItem]]
            usage = ['Generic Desktop', 'X']
            sizeInBits = 8

            [[applicationCollection.inputReport.physicalCollection.variableItem]]
            usage = ['Generic Desktop', 'Y']
            sizeInBits = 8

        [[applicationCollection.inputReport.variableItem]]
        usage = ['Generic Desktop', 'Hat Switch']
        logicalValueRange = [0, 7]
        physicalValueRange = [0, 270]
        unit = 'degrees'


###=======

// AUTO-GENERATED by WaratahCmd.exe

#include <memory>

// HID Usage Tables: 1.3.0
// Descriptor size: 67 (bytes)
// +----------+-------+------------------+
// | ReportId | Kind  | ReportSizeInBits |
// +----------+-------+------------------+
// |        1 | Input |               32 |
// +----------+-------+------------------+
static const uint8_t hidReportDescriptor [] =
{
    0x05, 0x01,          // UsagePage(Generic Desktop[1])
    0x09, 0x04,          // UsageId(Joystick[4])
    0xA1, 0x01,          // Collection(Application)
    0x85, 0x01,          //     ReportId(1)
    0x05, 0x09,          //     UsagePage(Button[9])
    0x19, 0x01,          //     UsageIdMin(Button 1[1])
    0x29, 0x0C,          //     UsageIdMax(Button 12[12])
    0x15, 0x00,          //     LogicalMinimum(0)
    0x25, 0x01,          //     LogicalMaximum(1)
    0x95, 0x0C,          //     ReportCount(12)
    0x75, 0x01,          //     ReportSize(1)
    0x81, 0x02,          //     Input(Data, Variable, Absolute, NoWrap, Linear, PreferredState, NoNullPosition, BitField)
    0x05, 0x01,          //     UsagePage(Generic Desktop[1])
    0x09, 0x01,          //     UsageId(Pointer[1])
    0xA1, 0x00,          //     Collection(Physical)
    0x09, 0x30,          //         UsageId(X[48])
    0x09, 0x31,          //         UsageId(Y[49])
    0x15, 0x80,          //         LogicalMinimum(-128)
    0x25, 0x7F,          //         LogicalMaximum(127)
    0x95, 0x02,          //         ReportCount(2)
    0x75, 0x08,          //         ReportSize(8)
    0x81, 0x02,          //         Input(Data, Variable, Absolute, NoWrap, Linear, PreferredState, NoNullPosition, BitField)
    0xC0,                //     EndCollection()
    0x09, 0x39,          //     UsageId(Hat Switch[57])
    0x46, 0x0E, 0x01,    //     PhysicalMaximum(270)
    0x65, 0x14,          //     Unit('degrees', EnglishRotation, Degrees:1)
    0x15, 0x00,          //     LogicalMinimum(0)
    0x25, 0x07,          //     LogicalMaximum(7)
    0x95, 0x01,          //     ReportCount(1)
    0x75, 0x03,          //     ReportSize(3)
    0x81, 0x02,          //     Input(Data, Variable, Absolute, NoWrap, Linear, PreferredState, NoNullPosition, BitField)
    0x75, 0x01,          //     ReportSize(1)
    0x81, 0x03,          //     Input(Constant, Variable, Absolute, NoWrap, Linear, PreferredState, NoNullPosition, BitField)
    0xC0,                // EndCollection()
};

#### Sliders first, then buttons, then hat

## Input
[[applicationCollection]]
usage = ['Generic Desktop', 'Gamepad']

    [[applicationCollection.inputReport]]

        [[applicationCollection.inputReport.physicalCollection]]
        usage = ['Generic Desktop', 'Pointer']

            [[applicationCollection.inputReport.physicalCollection.variableItem]]
            usage = ['Generic Desktop', 'X']
            sizeInBits = 8

            [[applicationCollection.inputReport.physicalCollection.variableItem]]
            usage = ['Generic Desktop', 'Y']
            sizeInBits = 8

        [[applicationCollection.inputReport.variableItem]]
        usageRange = ['Button', 'Button 1', 'Button 12']
        logicalValueRange = [0, 1]

        [[applicationCollection.inputReport.variableItem]]
        usage = ['Generic Desktop', 'Hat Switch']
        logicalValueRange = [0, 7]
        physicalValueRange = [0, 270]
        unit = 'degrees'



## Output

// AUTO-GENERATED by WaratahCmd.exe

#include <memory>

// HID Usage Tables: 1.3.0
// Descriptor size: 65 (bytes)
// +----------+-------+------------------+
// | ReportId | Kind  | ReportSizeInBits |
// +----------+-------+------------------+
// |        1 | Input |               32 |
// +----------+-------+------------------+
static const uint8_t hidReportDescriptor [] =
{
    0x05, 0x01,          // UsagePage(Generic Desktop[1])
    0x09, 0x05,          // UsageId(Gamepad[5])
    0xA1, 0x01,          // Collection(Application)
    0x85, 0x01,          //     ReportId(1)
    0x09, 0x01,          //     UsageId(Pointer[1])
    0xA1, 0x00,          //     Collection(Physical)
    0x09, 0x30,          //         UsageId(X[48])
    0x09, 0x31,          //         UsageId(Y[49])
    0x15, 0x80,          //         LogicalMinimum(-128)
    0x25, 0x7F,          //         LogicalMaximum(127)
    0x95, 0x02,          //         ReportCount(2)
    0x75, 0x08,          //         ReportSize(8)
    0x81, 0x02,          //         Input(Data, Variable, Absolute, NoWrap, Linear, PreferredState, NoNullPosition, BitField)
    0xC0,                //     EndCollection()
    0x05, 0x09,          //     UsagePage(Button[9])
    0x19, 0x01,          //     UsageIdMin(Button 1[1])
    0x29, 0x0C,          //     UsageIdMax(Button 12[12])
    0x15, 0x00,          //     LogicalMinimum(0)
    0x25, 0x01,          //     LogicalMaximum(1)
    0x95, 0x0C,          //     ReportCount(12)
    0x75, 0x01,          //     ReportSize(1)
    0x81, 0x02,          //     Input(Data, Variable, Absolute, NoWrap, Linear, PreferredState, NoNullPosition, BitField)
    0x05, 0x01,          //     UsagePage(Generic Desktop[1])
    0x09, 0x39,          //     UsageId(Hat Switch[57])
    0x46, 0x0E, 0x01,    //     PhysicalMaximum(270)
    0x65, 0x14,          //     Unit('degrees', EnglishRotation, Degrees:1)
    0x25, 0x07,          //     LogicalMaximum(7)
    0x95, 0x01,          //     ReportCount(1)
    0x75, 0x03,          //     ReportSize(3)
    0x81, 0x02,          //     Input(Data, Variable, Absolute, NoWrap, Linear, PreferredState, NoNullPosition, BitField)
    0x75, 0x01,          //     ReportSize(1)
    0x81, 0x03,          //     Input(Constant, Variable, Absolute, NoWrap, Linear, PreferredState, NoNullPosition, BitField)
    0xC0,                // EndCollection()
};


###======
## 7 switches/7 POV, Max degree 315

## Input:
[[applicationCollection]]
usage = ['Generic Desktop', 'Gamepad']

    [[applicationCollection.inputReport]]

        [[applicationCollection.inputReport.physicalCollection]]
        usage = ['Generic Desktop', 'Pointer']

            [[applicationCollection.inputReport.physicalCollection.variableItem]]
            usage = ['Generic Desktop', 'X']
            sizeInBits = 8

            [[applicationCollection.inputReport.physicalCollection.variableItem]]
            usage = ['Generic Desktop', 'Y']
            sizeInBits = 8

        [[applicationCollection.inputReport.variableItem]]
        usageRange = ['Button', 'Button 1', 'Button 12']
        logicalValueRange = [0, 1]

        [[applicationCollection.inputReport.variableItem]]
        usage = ['Generic Desktop', 'Hat Switch']
        logicalValueRange = [0, 7]
        physicalValueRange = [0, 315]
        unit = 'degrees'



## Output

// AUTO-GENERATED by WaratahCmd.exe

#include <memory>

// HID Usage Tables: 1.3.0
// Descriptor size: 65 (bytes)
// +----------+-------+------------------+
// | ReportId | Kind  | ReportSizeInBits |
// +----------+-------+------------------+
// |        1 | Input |               32 |
// +----------+-------+------------------+
static const uint8_t hidReportDescriptor [] =
{
    0x05, 0x01,          // UsagePage(Generic Desktop[1])
    0x09, 0x05,          // UsageId(Gamepad[5])
    0xA1, 0x01,          // Collection(Application)
    0x85, 0x01,          //     ReportId(1)
    0x09, 0x01,          //     UsageId(Pointer[1])
    0xA1, 0x00,          //     Collection(Physical)
    0x09, 0x30,          //         UsageId(X[48])
    0x09, 0x31,          //         UsageId(Y[49])
    0x15, 0x80,          //         LogicalMinimum(-128)
    0x25, 0x7F,          //         LogicalMaximum(127)
    0x95, 0x02,          //         ReportCount(2)
    0x75, 0x08,          //         ReportSize(8)
    0x81, 0x02,          //         Input(Data, Variable, Absolute, NoWrap, Linear, PreferredState, NoNullPosition, BitField)
    0xC0,                //     EndCollection()
    0x05, 0x09,          //     UsagePage(Button[9])
    0x19, 0x01,          //     UsageIdMin(Button 1[1])
    0x29, 0x0C,          //     UsageIdMax(Button 12[12])
    0x15, 0x00,          //     LogicalMinimum(0)
    0x25, 0x01,          //     LogicalMaximum(1)
    0x95, 0x0C,          //     ReportCount(12)
    0x75, 0x01,          //     ReportSize(1)
    0x81, 0x02,          //     Input(Data, Variable, Absolute, NoWrap, Linear, PreferredState, NoNullPosition, BitField)
    0x05, 0x01,          //     UsagePage(Generic Desktop[1])
    0x09, 0x39,          //     UsageId(Hat Switch[57])
    0x46, 0x3B, 0x01,    //     PhysicalMaximum(315)
    0x65, 0x14,          //     Unit('degrees', EnglishRotation, Degrees:1)
    0x25, 0x07,          //     LogicalMaximum(7)
    0x95, 0x01,          //     ReportCount(1)
    0x75, 0x03,          //     ReportSize(3)
    0x81, 0x02,          //     Input(Data, Variable, Absolute, NoWrap, Linear, PreferredState, NoNullPosition, BitField)
    0x75, 0x01,          //     ReportSize(1)
    0x81, 0x03,          //     Input(Constant, Variable, Absolute, NoWrap, Linear, PreferredState, NoNullPosition, BitField)
    0xC0,                // EndCollection()
};




